import { BaseLocalRepository, BenchmarkReturnRepository, BondDetailsRepository, DepositDetailsRepository, InstrumentSebiCategoryRepository } from '../../repositories';
import { BelongsToAccessor, Getter, HasManyRepositoryFactory, HasOneRepositoryFactory, juggler } from '@loopback/repository';
import { Asset, AssetClassification, BenchmarkReturn, BondDetails, CapitalBucket, DailyInstrumentPriceSnapshot, DailyInstrumentRollingAlphaSnapshot, DepositDetails, EquityDetailsHistory, IndexDetails, Instrument, InstrumentCategory, InstrumentCategoryGroup, InstrumentHolding, InstrumentRatingMapping, InstrumentRelations, InstrumentSebiCategory, InstrumentSectorMapping, InstrumentType, MutualFundDetails, MutualFundDetailsHistory, Product, ServiceProvider } from '../../models';
import { ProductRepository } from './product.repository';
import { AssetRepository } from './asset.repository';
import { InstrumentTypeRepository } from './instrument-type.repository';
import { InstrumentCategoryRepository } from './instrument-category.repository';
import { CapitalBucketRepository } from './capital-bucket.repository';
import { ServiceProviderRepository } from './service-provider.repository';
import { AssetClassificationRepository } from './asset-classification.repository';
import { IndexDetailsRepository } from './index-details.repository';
import { MutualFundDetailsRepository } from './mutual-fund-details.repository';
import { DailyInstrumentPriceSnapshotRepository } from './daily-instrument-price-snapshot.repository';
import { InstrumentSectorMappingRepository } from './instrument-sector-mapping.repository';
import { InstrumentRatingMappingRepository } from './instrument-rating-mapping.repository';
import { InstrumentHoldingRepository } from './instrument-holding.repository';
import { EquityDetailsHistoryRepository } from './equity-details-history.repository';
import { MutualFundDetailsHistoryRepository } from './mutual-fund-details-history.repository';
import { DailyInstrumentRollingAlphaSnapshotRepository } from './daily-instrument-rolling-alpha-snapshot.repository';
import { InstrumentCategoryGroupRepository } from './instrument-category-group.repository';
export declare class InstrumentRepository extends BaseLocalRepository<Instrument, typeof Instrument.prototype.id, InstrumentRelations> {
    readonly product: BelongsToAccessor<Product, typeof Instrument.prototype.id>;
    readonly asset: BelongsToAccessor<Asset, typeof Instrument.prototype.id>;
    readonly instrumentCategoryGroup: BelongsToAccessor<InstrumentCategoryGroup, typeof Instrument.prototype.id>;
    readonly taxAsset: BelongsToAccessor<Asset, typeof Instrument.prototype.id>;
    readonly benchmarkInstrument: BelongsToAccessor<Instrument, typeof Instrument.prototype.id>;
    readonly instrumentType: BelongsToAccessor<InstrumentType, typeof Instrument.prototype.id>;
    readonly instrumentCategory: BelongsToAccessor<InstrumentCategory, typeof Instrument.prototype.id>;
    readonly instrumentSebiCategory: BelongsToAccessor<InstrumentSebiCategory, typeof Instrument.prototype.id>;
    readonly capitalBucket: BelongsToAccessor<CapitalBucket, typeof Instrument.prototype.id>;
    readonly serviceProvider: BelongsToAccessor<ServiceProvider, typeof Instrument.prototype.id>;
    readonly assetClassification: BelongsToAccessor<AssetClassification, typeof Instrument.prototype.id>;
    readonly indexDetails: HasOneRepositoryFactory<IndexDetails, typeof IndexDetails.prototype.id>;
    readonly mutualFundDetails: HasOneRepositoryFactory<MutualFundDetails, typeof MutualFundDetails.prototype.id>;
    readonly bondDetails: HasOneRepositoryFactory<BondDetails, typeof BondDetails.prototype.id>;
    readonly dailyInstrumentPriceSnapshots: HasManyRepositoryFactory<DailyInstrumentPriceSnapshot, typeof Instrument.prototype.id>;
    readonly instrumentSectorMappings: HasManyRepositoryFactory<InstrumentSectorMapping, typeof Instrument.prototype.id>;
    readonly instrumentRatingMappings: HasManyRepositoryFactory<InstrumentRatingMapping, typeof Instrument.prototype.id>;
    readonly instrumentHoldingMappings: HasManyRepositoryFactory<InstrumentHolding, typeof Instrument.prototype.id>;
    readonly equityDetailsHistory: HasManyRepositoryFactory<EquityDetailsHistory, typeof Instrument.prototype.id>;
    readonly mutualFundDetailsHistory: HasManyRepositoryFactory<MutualFundDetailsHistory, typeof Instrument.prototype.id>;
    readonly dailyInstrumentRollingAlphaSnapshots: HasManyRepositoryFactory<DailyInstrumentRollingAlphaSnapshot, typeof Instrument.prototype.id>;
    readonly benchmarkReturnHistories: HasManyRepositoryFactory<BenchmarkReturn, typeof Instrument.prototype.id>;
    readonly depositDetails: HasManyRepositoryFactory<DepositDetails, typeof Instrument.prototype.id>;
    constructor(dataSource: juggler.DataSource, productRepositoryGetter: Getter<ProductRepository>, assetRepositoryGetter: Getter<AssetRepository>, instrumentCategoryGroupGetter: Getter<InstrumentCategoryGroupRepository>, taxAssetRepositoryGetter: Getter<AssetRepository>, benchmarkInstrumentRepositoryGetter: Getter<InstrumentRepository>, instrumentTypeRepositoryGetter: Getter<InstrumentTypeRepository>, instrumentCategoryRepositoryGetter: Getter<InstrumentCategoryRepository>, instrumentSebiCategoryRepositoryGetter: Getter<InstrumentSebiCategoryRepository>, capitalBucketRepositoryGetter: Getter<CapitalBucketRepository>, serviceProviderRepositoryGetter: Getter<ServiceProviderRepository>, assetClassificationRepositoryGetter: Getter<AssetClassificationRepository>, indexDetailsRepositoryGetter: Getter<IndexDetailsRepository>, mutualFundDetailsRepositoryGetter: Getter<MutualFundDetailsRepository>, bondDetailsRepositoryGetter: Getter<BondDetailsRepository>, dailyInstrumentPriceSnapshotRepositoryGetter: Getter<DailyInstrumentPriceSnapshotRepository>, instrumentSectorMappingRepositoryGetter: Getter<InstrumentSectorMappingRepository>, instrumentRatingMappingRepositoryGetter: Getter<InstrumentRatingMappingRepository>, instrumentHoldingRepositoryGetter: Getter<InstrumentHoldingRepository>, equityDetailsHistoryRepositoryGetter: Getter<EquityDetailsHistoryRepository>, mutualFundDetailsHistoryRepositoryGetter: Getter<MutualFundDetailsHistoryRepository>, dailyInstrumentRollingAlphaSnapshotRepositoryGetter: Getter<DailyInstrumentRollingAlphaSnapshotRepository>, benchmarkReturnRepositoryGetter: Getter<BenchmarkReturnRepository>, depositDetailsRepositoryGetter: Getter<DepositDetailsRepository>);
}
