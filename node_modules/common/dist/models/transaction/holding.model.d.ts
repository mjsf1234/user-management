import { BaseSQLModel } from '..';
export declare class Holding extends BaseSQLModel {
    uniqueId?: string;
    holdingDate: Date;
    investmentDate?: Date;
    quantity: number;
    averagePricePerUnit?: number;
    totalInvestedAmount: number;
    currentPricePerUnit?: number;
    totalCurrentValue: number;
    totalCommitmentAmount?: number;
    totalDrawdownAmount?: number;
    sellableQuantity?: number;
    totalInterestAmount?: number;
    totalReturnOfCapitalAmount?: number;
    totalReturnOnCapitalAmount?: number;
    dividendReinvested?: number;
    dividendPaid?: number;
    totalIncome?: number;
    accruedInterest?: number;
    absoluteProfitLoss?: number;
    percentageProfitLoss?: number;
    xirr?: number;
    unrealizedShortTermCapitalGain?: number;
    unrealizedLongTermCapitalGain?: number;
    unrealizedBusinessCapitalGain?: number;
    realizedShortTermCapitalGain?: number;
    realizedLongTermCapitalGain?: number;
    realizedBusinessCapitalGain?: number;
    unrealizedShortTermCapitalQuantity?: number;
    unrealizedLongTermCapitalQuantity?: number;
    bosCode?: string;
    benchmarkTotalCurrentValue?: number;
    benchmarkXirr?: number;
    beginningMarketValue?: number;
    beginningMarketQuantity?: number;
    flows?: number;
    inflows?: number;
    outflows?: number;
    benchmarkFlows?: number;
    benchmarkInflows?: number;
    benchmarkOutflows?: number;
    absoluteReturn?: number;
    benchmarkAbsoluteReturn?: number;
    profit?: number;
    xirrData?: object;
    benchmarkXirrData?: object;
    states?: object;
    isZeroised: boolean;
    isSellAllowed?: boolean;
    serviceProviderAccountId: number;
    instrumentId: number;
    currencyId: number;
    goalId?: number;
    [prop: string]: any;
    constructor(data?: Partial<Holding>);
}
export interface HoldingRelations {
}
export declare type HoldingWithRelations = Holding & HoldingRelations;
