import { BaseSQLModel, DepositDetails } from '..';
import { BenchmarkReturn } from './benchmark-return.model';
import { BondDetails } from './bond-details.model';
import { DailyInstrumentPriceSnapshot } from './daily-instrument-price-snapshot.model';
import { DailyInstrumentRollingAlphaSnapshot } from './daily-instrument-rolling-alpha-snapshot.model';
import { EquityDetailsHistory } from './equity-details-history.model';
import { IndexDetails } from './index-details.model';
import { InstrumentHolding } from './instrument-holding.model';
import { InstrumentRatingMapping } from './instrument-rating-mapping.model';
import { InstrumentSectorMapping } from './instrument-sector-mapping.model';
import { MutualFundDetailsHistory } from './mutual-fund-details-history.model';
import { MutualFundDetails } from './mutual-fund-details.model';
export declare class Instrument extends BaseSQLModel {
    name?: string;
    fullName?: string;
    description?: string;
    serviceProviderSpecificCode?: string;
    rtaCode?: string;
    bosCode?: string;
    nseCode?: string;
    bseCode?: string;
    bseUniqueId?: string;
    isinCode?: string;
    fundooCode?: string;
    fundooCodeSubPlan?: string;
    variantFundId?: string;
    companyCode?: string;
    fundooRTACode?: string;
    instrumentStatus?: number;
    inceptionPrice?: number;
    inceptionPriceDate?: Date;
    lastPrice?: number;
    lastPriceDate?: Date;
    movementFromPreviousPrice?: number;
    percentageMovementFromPreviousPrice?: number;
    isPrimary: boolean;
    isRecommended: boolean;
    recommendationType?: number | null;
    instrumentRank?: number;
    unitizedFlag: number;
    historicNav?: boolean;
    isNfo: boolean;
    productId: number;
    assetId?: number;
    taxAssetId?: number;
    benchmarkInstrumentId?: number;
    instrumentTypeId?: number;
    instrumentCategoryId?: number;
    categoryGroupId?: number;
    instrumentSebiCategoryId?: number;
    capitalBucketId?: number;
    serviceProviderId?: number;
    assetClassificationId?: number;
    indexDetails?: IndexDetails;
    mutualFundDetails?: MutualFundDetails;
    bondDetails?: BondDetails;
    dailyInstrumentPriceSnapshots?: DailyInstrumentPriceSnapshot[];
    instrumentSectorMappings?: InstrumentSectorMapping[];
    instrumentRatingMappings?: InstrumentRatingMapping[];
    instrumentHoldingMappings?: InstrumentHolding[];
    equityDetailsHistory?: EquityDetailsHistory[];
    mutualFundDetailsHistory?: MutualFundDetailsHistory[];
    dailyInstrumentRollingAlphaSnapshots?: DailyInstrumentRollingAlphaSnapshot[];
    benchmarkReturnHistories?: BenchmarkReturn[];
    depositDetails?: DepositDetails[];
    [prop: string]: any;
    constructor(data?: Partial<Instrument>);
}
export interface InstrumentRelations {
}
export declare type InstrumentWithRelations = Instrument & InstrumentRelations;
