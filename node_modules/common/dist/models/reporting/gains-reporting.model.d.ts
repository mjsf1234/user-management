import { BaseESModel } from '../base-es-model.model';
export declare class GainsReporting extends BaseESModel {
    id?: number;
    gainId?: number;
    gainUniqueId?: string;
    buyDate?: Date;
    buyFinancialYear?: string;
    buyIndexationCost?: number;
    indexedCost?: number;
    pricePerUnitAsOnGrandfatheringDate?: number;
    nav?: number;
    adjustedPurchaseCost?: number;
    sellDate?: Date;
    sellFinancialYear?: string;
    sellIndexationCost?: number;
    holdingDays?: number;
    quantity?: number;
    averageBuyPricePerUnit?: number;
    averageSellPricePerUnit?: number;
    totalBuyAmount?: number;
    totalSellAmount?: number;
    shortTermCapitalGain?: number;
    longTermCapitalGain?: number;
    businessCapitalGain?: number;
    totalCapitalGain?: number;
    totalCapitalGainWithIndexation?: number;
    differenceDueToIndexation?: number;
    capitalGainType?: number;
    capitalGainTypeLabel?: string;
    buyTransactionId?: number;
    sellTransactionId?: number;
    distributorId?: number;
    distributorName?: string;
    groupId?: number;
    groupName?: string;
    familyId?: number;
    familyName?: string;
    appUserId?: number;
    appUserName?: string;
    appUserEmail?: string;
    appUserCode?: string;
    appUserContactNumberCountryCode?: string;
    appUserContactNumber?: string;
    accountId?: number;
    accountName?: string;
    accountUniqueId?: string;
    accountStatus?: number;
    accountStatusLabel?: string;
    accountActivationDate?: Date;
    serviceProviderAccountIsHeldAway?: boolean;
    serviceProviderId?: number;
    serviceProviderAccountNumber?: string;
    serviceProviderAccountId?: number;
    serviceProviderReferenceNumber?: string;
    serviceProviderAccountType?: number;
    serviceProviderAccountTypeLabel?: string;
    serviceProviderName?: string;
    serviceProviderShortName?: string;
    serviceProviderDescription?: string;
    serviceProviderType?: number;
    serviceProviderTypeLabel?: string;
    currencyId?: number;
    currencyName?: string;
    currencyShortName?: string;
    instrumentId?: number;
    instrumentName?: string;
    instrumentFullName?: string;
    instrumentDescription?: string;
    instrumentServiceProviderSpecificCode?: string;
    instrumentRTACode?: string;
    instrumentFundooRTACode?: string;
    instrumentISINCode?: string;
    instrumentStatus?: number;
    instrumentStatusLabel?: string;
    instrumentInceptionPrice?: number;
    instrumentInceptionPriceDate?: Date;
    instrumentLastPrice?: number;
    instrumentLastPriceDate?: Date;
    instrumentMovementFromPreviousPrice?: number;
    instrumentPercentageMovementFromPreviousPrice?: number;
    instrumentIsUnitized: boolean;
    instrumentUnitizedFlag?: number;
    instrumentUnitizedFlagLabel?: string;
    productId?: number;
    productName?: string;
    productDescription?: string;
    assetId?: number;
    assetName?: string;
    assetDescription?: string;
    assetType?: number;
    assetTypeLabel?: string;
    taxAssetId?: number;
    taxAssetName?: string;
    taxAssetDescription?: string;
    taxAssetType?: number;
    taxAssetTypeLabel?: string;
    instrumentTypeId?: number;
    instrumentTypeName?: string;
    instrumentTypeDescription?: string;
    instrumentCategoryId?: number;
    instrumentCategoryName?: string;
    instrumentCategoryDescription?: string;
    effectiveCost?: number;
    priceAsOn31Jan2018?: number;
    [prop: string]: any;
    constructor(data?: Partial<GainsReporting>);
}
export interface GainsReportingRelations {
}
export declare type GainsReportingWithRelations = GainsReporting & GainsReportingRelations;
