import { BaseESModel } from '../base-es-model.model';
export declare class SystematicMethodsReporting extends BaseESModel {
    id?: number;
    systematicMethodId?: number;
    frequency?: number;
    frequencyLabel?: string;
    transactionCount?: number;
    type?: number;
    typeLabel?: string;
    status?: number;
    statusLabel?: string;
    startDate?: Date;
    endDate?: Date;
    firstExecutionDate?: Date;
    nextExecutionDate?: Date;
    quantity?: number;
    amount?: number;
    serviceProviderId?: number;
    serviceProviderAccountNumber?: string;
    serviceProviderAccountId?: number;
    distributorId?: number;
    distributorName?: string;
    groupId?: number;
    groupName?: string;
    familyId?: number;
    familyName?: string;
    appUserId?: number;
    appUserName?: string;
    appUserEmail?: string;
    appUserCode?: string;
    appUserContactNumberCountryCode?: string;
    appUserContactNumber?: string;
    accountId?: number;
    accountName?: string;
    accountUniqueId?: string;
    accountStatus?: number;
    accountStatusLabel?: string;
    accountActivationDate?: Date;
    serviceProviderAccountIsHeldAway?: boolean;
    accountIsProspect?: boolean;
    currencyId?: number;
    currencyName?: string;
    currencyShortName?: string;
    goalId?: number;
    goalUniqueId?: string;
    goalName?: string;
    goalType?: number;
    goalTypeLabel?: string;
    goalDescription?: string;
    instrumentId?: number;
    toInstrumentId?: number;
    instrumentName?: string;
    toInstrumentName?: string;
    instrumentFullName?: string;
    toInstrumentFullName?: string;
    instrumentDescription?: string;
    instrumentServiceProviderSpecificCode?: string;
    instrumentRTACode?: string;
    toInstrumentRTACode?: string;
    instrumentFundooRTACode?: string;
    toInstrumentFundooRTACode?: string;
    instrumentISINCode?: string;
    toInstrumentISINCode?: string;
    instrumentStatus?: number;
    toInstrumentStatus?: number;
    instrumentStatusLabel?: string;
    toInstrumentStatusLabel?: string;
    instrumentInceptionPrice?: number;
    toInstrumentInceptionPrice?: number;
    instrumentInceptionPriceDate?: Date;
    toInstrumentInceptionPriceDate?: Date;
    instrumentLastPrice?: number;
    toInstrumentLastPrice?: number;
    instrumentLastPriceDate?: Date;
    toInstrumentLastPriceDate?: Date;
    instrumentMovementFromPreviousPrice?: number;
    toInstrumentMovementFromPreviousPrice?: number;
    instrumentPercentageMovementFromPreviousPrice?: number;
    toInstrumentPercentageMovementFromPreviousPrice?: number;
    productId?: number;
    toProductId?: number;
    productName?: string;
    toProductName?: string;
    productDescription?: string;
    toProductDescription?: string;
    assetId?: number;
    toAssetId?: number;
    assetName?: string;
    toAssetName?: string;
    assetDescription?: string;
    toAssetDescription?: string;
    assetType?: number;
    toAssetType?: number;
    assetTypeLabel?: string;
    toAssetTypeLabel?: string;
    instrumentTypeId?: number;
    toInstrumentTypeId?: number;
    instrumentTypeName?: string;
    toInstrumentTypeName?: string;
    instrumentTypeDescription?: string;
    toInstrumentTypeDescription?: string;
    instrumentCategoryId?: number;
    toInstrumentCategoryId?: number;
    instrumentCategoryName?: string;
    toInstrumentCategoryName?: string;
    instrumentCategoryDescription?: string;
    toInstrumentCategoryDescription?: string;
    instrumentIsUnitized: boolean;
    instrumentUnitizedFlag?: number;
    instrumentUnitizedFlagLabel?: string;
    systematicRegistrationNumber?: string;
    currentInstallmentNo?: number;
    availableDates?: string;
    toScheme?: number;
    orderTime?: string;
    orderDate?: Date;
    frequencyDay?: number;
    primaryAMCCode?: string;
    serviceProviderBankAccountNumber?: string;
    exportOrderDate?: string;
    [prop: string]: any;
    constructor(data?: Partial<SystematicMethodsReporting>);
}
export interface SystematicMethodsReportingRelations {
}
export declare type SystematicMethodsReportingWithRelations = SystematicMethodsReporting & SystematicMethodsReportingRelations;
