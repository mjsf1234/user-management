import { BaseESModel } from '../base-es-model.model';
export declare class TransactionsReporting extends BaseESModel {
    id?: number;
    isDummy?: boolean;
    transactionId?: number;
    transactionBOSCode?: string;
    transactionNSECode?: string;
    transactionBSECode?: string;
    reverseFeedUniqueHash?: string;
    transactionDate?: Date;
    orderDate?: Date;
    quantity?: number;
    openingQuantity?: number;
    closingQuantity?: number;
    pricePerUnit?: number;
    totalAmount?: number;
    brokerageAmount?: number;
    accruedInterest?: number;
    openingAmount?: number;
    closingAmount?: number;
    taxAmount?: number;
    totalTaxAmount?: number;
    securitiesTransactionTaxAmount?: number;
    transactionSubType?: number;
    transactionSubTypeLabel: string;
    serviceProviderReferenceNumber?: string;
    serviceProviderReferenceName?: string;
    coupon?: number;
    maturityDate?: Date;
    accrualFrequency: number;
    accrualFrequencyLabel: string;
    userTransactionNumber?: string;
    remark?: string;
    transactionStatus: number;
    transactionStatusLabel: string;
    orderItemId?: number;
    orderItemUniqueId?: string;
    orderId?: number;
    orderUniqueId?: string;
    systematicMethodId?: number;
    systematicMethodFrequency?: number;
    systematicMethodFrequencyLabel?: string;
    systematicMethodFrequencyDay?: number;
    systematicMethodType?: number;
    systematicMethodTypeLabel?: string;
    systematicMethodStartDate?: Date;
    systematicMethodEndDate?: Date;
    transactionTypeId?: number;
    transactionTypeName?: string;
    transactionTypeDescription?: string;
    holdingCalculationBuySellType?: number;
    holdingCalculationBuySellTypeLabel?: string;
    instrumentId?: number;
    instrumentName?: string;
    instrumentFullName?: string;
    instrumentDescription?: string;
    instrumentServiceProviderSpecificCode?: string;
    instrumentBOSCode?: string;
    instrumentRTACode?: string;
    instrumentFundooRTACode?: string;
    instrumentISINCode?: string;
    instrumentStatus?: number;
    instrumentStatusLabel?: string;
    instrumentInceptionPrice?: number;
    instrumentInceptionPriceDate?: string;
    instrumentLastPrice?: number;
    instrumentLastPriceDate?: Date;
    navDate?: Date;
    instrumentMovementFromPreviousPrice?: number;
    instrumentPercentageMovementFromPreviousPrice?: number;
    secondaryInstrumentId?: number;
    secondaryInstrumentName?: string;
    secondaryInstrumentFullName?: string;
    secondaryInstrumentServiceProviderSpecificCode?: string;
    secondaryInstrumentRTACode?: string;
    productId?: number;
    productName?: string;
    productDescription?: string;
    assetId?: number;
    assetName?: string;
    assetDescription?: string;
    assetType?: number;
    assetTypeLabel?: string;
    taxAssetId?: number;
    taxAssetName?: string;
    taxAssetDescription?: string;
    taxAssetType?: number;
    taxAssetTypeLabel?: string;
    instrumentTypeId?: number;
    instrumentTypeName?: string;
    instrumentTypeDescription?: string;
    instrumentCategoryId?: number;
    instrumentCategoryName?: string;
    instrumentCategoryDescription?: string;
    instrumentCategoryShortName?: string;
    instrumentIsUnitized: boolean;
    instrumentUnitizedFlag?: number;
    instrumentUnitizedFlagLabel?: string;
    bondDetailsCoupon?: number;
    serviceProviderAccountId?: number;
    serviceProviderAccountNumber?: string;
    serviceProviderAccountType?: number;
    serviceProviderAccountTypeLabel?: string;
    distributorId?: number;
    distributorName?: string;
    groupId?: number;
    groupName?: string;
    familyId?: number;
    familyName?: string;
    appUserId?: number;
    appUserName?: string;
    appUserEmail?: string;
    appUserCode?: string;
    appUserContactNumberCountryCode?: string;
    appUserContactNumber?: string;
    accountId?: number;
    accountCategoryId?: number;
    accountName?: string;
    accountUniqueId?: string;
    accountStatus?: number;
    accountStatusLabel?: string;
    accountActivationDate?: Date;
    serviceProviderAccountIsHeldAway?: boolean;
    accountIsProspect?: boolean;
    serviceProviderId?: number;
    serviceProviderName?: string;
    serviceProviderShortName?: string;
    serviceProviderDescription?: string;
    serviceProviderType?: number;
    serviceProviderTypeLabel?: string;
    serviceProviderRTACode?: string;
    currencyId?: number;
    currencyName?: string;
    currencyShortName?: string;
    corporateActionId?: number;
    pricePerUnitCA?: number;
    offeredUnitCA?: number;
    heldUnitCA?: number;
    corporateActionSettings?: object;
    instrumentIdCA?: number;
    instrumentNameCA?: string;
    secondaryInstrumentIdCA?: number;
    secondaryInstrumentNameCA?: string;
    goalId?: number;
    goalUniqueId?: string;
    goalName?: string;
    goalType?: number;
    goalTypeLabel?: string;
    goalDescription?: string;
    realEstateDetailsAddress?: string;
    serviceProviderAccountFixedDepositName?: string;
    insuranceServiceProviderAccountDetailName?: string;
    ppfDetailName?: string;
    deletedByUserId?: number;
    deletedByUserName?: string;
    paymentMode?: number;
    utrNumber?: string;
    valueDate?: Date;
    orderTime?: string;
    city?: string;
    orderSource?: number;
    orderSourceLabel: string;
    [prop: string]: any;
    constructor(data?: Partial<TransactionsReporting>);
}
export interface TransactionsReportingRelations {
}
export declare type TransactionsReportingWithRelations = TransactionsReporting & TransactionsReportingRelations;
