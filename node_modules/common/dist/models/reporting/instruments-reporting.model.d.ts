import { BaseESModel } from '../base-es-model.model';
export declare class InstrumentsReporting extends BaseESModel {
    id?: number;
    instrumentId?: number;
    instrumentName?: string;
    instrumentFullName?: string;
    instrumentDescription?: string;
    instrumentServiceProviderSpecificCode?: string;
    instrumentRTACode?: string;
    instrumentFundooCodeSubPlan?: string;
    instrumentBOSCode?: string;
    instrumentNSECode?: string;
    instrumentBSECode?: string;
    instrumentISINCode?: string;
    instrumentMutualFundsSchemeName?: string;
    fundooCode?: string;
    instrumentFundooRTACode?: string;
    instrumentStatus?: number;
    instrumentStatusLabel?: string;
    instrumentInceptionPrice?: number;
    instrumentInceptionPriceDate?: Date;
    instrumentLastPrice?: number;
    instrumentLastPriceDate?: Date;
    instrumentCreatedDate?: Date;
    instrumentMovementFromPreviousPrice?: number;
    instrumentPercentageMovementFromPreviousPrice?: number;
    instrumentIsPrimary: boolean;
    instrumentIsRecommended: boolean;
    instrumentRecommendationType?: number | null;
    instrumentIsUnitized: boolean;
    instrumentUnitizedFlag?: number;
    instrumentUnitizedFlagLabel?: string;
    productId?: number;
    productName?: string;
    productDescription?: string;
    assetId?: number;
    assetName?: string;
    assetDescription?: string;
    assetType?: number;
    assetTypeLabel?: string;
    taxAssetId?: number;
    taxAssetName?: string;
    taxAssetDescription?: string;
    taxAssetType?: number;
    taxAssetTypeLabel?: string;
    instrumentTypeId?: number;
    instrumentTypeName?: string;
    instrumentTypeDescription?: string;
    instrumentCategoryId?: number;
    instrumentCategoryName?: string;
    shortName?: string;
    instrumentCategoryDescription?: string;
    serviceProviderId?: number;
    serviceProviderName?: string;
    serviceProviderShortName?: string;
    serviceProviderDescription?: string;
    serviceProviderType?: number;
    serviceProviderTypeLabel?: string;
    serviceProviderRTACode?: string;
    serviceProviderRTAName?: string;
    sectorOne?: string;
    sectorTwo?: string;
    instrumentRatings?: object[];
    mutualFundsId?: number;
    fundManager?: string;
    fundManagerEducation?: string;
    fundManagerExperience?: string;
    fundObjective?: string;
    riskColourName?: string;
    risk?: string;
    activeRisk?: string;
    informationRisk?: string;
    fundRating?: string;
    riskGrade?: string;
    returnGrade?: string;
    rank?: string;
    scripStyle?: string;
    corpus?: number;
    expenseRatio?: number;
    turnoverRatio?: number;
    peScore?: number;
    pbScore?: number;
    giantMarketCapPercentage?: number;
    largeMarketCapPercentage?: number;
    midMarketCapPercentage?: number;
    smallMarketCapPercentage?: number;
    tinyMarketCapPercentage?: number;
    averageMaturity?: number;
    yieldToMaturity?: number;
    modDuration?: number;
    absoluteReturn?: number;
    annualReturn?: number;
    standardDeviation?: number;
    mean?: number;
    alpha?: number;
    beta?: number;
    rsquared?: number;
    alphaStated?: number;
    betaStated?: number;
    rsquaredStated?: number;
    jensonAlpha?: number;
    volatility?: number;
    sortinoRatio?: number;
    treynorRatio?: number;
    sharpeRatio?: number;
    informationRatio?: number;
    mutualFundsStartDate?: Date;
    mutualFundsEndDate?: Date;
    mutualFundsIsSIPAllowed?: boolean;
    mutualFundsIsPurchaseAllowed?: boolean;
    mutualFundsIsSwitchInAllowed?: boolean;
    mutualFundsIsSwitchOutAllowed?: boolean;
    mutualFundsIsRedemptionAllowed?: boolean;
    mutualFundsIsSTPAllowed?: boolean;
    mutualFundsIsSWPAllowed?: boolean;
    mutualFundsMinSIPAmount?: number;
    mutualFundsMaxSIPAmount?: number;
    mutualFundsMinRedemptionAmount?: number;
    mutualFundsMaxRedemptionAmount?: number;
    mutualFundsMinRedemptionQuantity?: number;
    mutualFundsMaxRedemptionQuantity?: number;
    mutualFundsReinvestmentFlag: string;
    mutualFundsPlanType?: number;
    mutualFundsPlanTypeLabel: string;
    mutualFundsMinInvestmentAmount?: number;
    mutualFundsMinAdditionalInvestmentAmount?: number;
    mutualFundsMaxInvestmentAmount?: number;
    mutualFundsMaxAdditionalInvestmentAmount?: number;
    mutualFundsReturnFor1Month?: number;
    mutualFundsReturnFor1Day?: number;
    mutualFundsReturnFor3Month?: number;
    mutualFundsReturnFor6Month?: number;
    mutualFundsReturnFor1Year?: number;
    mutualFundsReturnFor2Year?: number;
    mutualFundsReturnFor3Year?: number;
    mutualFundsReturnFor5Year?: number;
    mutualFundsSharpeRatioFor1Year?: number;
    mutualFundsSharpeRatioFor3Year?: number;
    mutualFundsSharpeRatioFor5Year?: number;
    mutualFundsVolatilityFor1Year?: number;
    mutualFundsVolatilityFor3Year?: number;
    mutualFundsVolatilityFor5Year?: number;
    mutualFundsRedemptionAmountMultiplier?: number;
    mutualFundsRedemptionQuantityMultiplier?: number;
    mutualFundsPurchaseAmountMultiplier?: number;
    mutualFundsEndType?: number;
    mutualFundsEndTypeLabel?: string;
    mutualFundsLockinPeriod?: string;
    mutualFundsFaceValue?: number;
    mutualFundsAllotmentDate?: Date;
    bondCoupon?: number;
    bondMaturityDate?: Date;
    benchmarkInstrumentId?: number;
    benchmarkInstrumentName?: string;
    instrumentCategoryBenchmarkName?: string;
    instrumentCategorySuitability?: object;
    instrumentSebiCategoryId?: number;
    instrumentSebiCategoryName?: string;
    instrumentSebiCategoryDescription?: string;
    instrumentSebiCategoryBosCode?: string;
    instrumentSebiCategoryShortName?: string;
    bseUniqueId?: string;
    instrumentIsNfo: boolean;
    mutualFundsIssueOpenDate?: Date;
    mutualFundsIssueCloseDate?: Date;
    mutualFundsIssueActualCloseDate?: Date;
    mutualFundsExitLoad?: string;
    logo?: string;
    serviceProviderStatus?: number;
    serviceProviderStatusLabel?: string;
    website?: string;
    addressLine1?: string;
    addressLine2?: string;
    addressLine3?: string;
    city?: string;
    pincode?: string;
    phone?: string;
    email?: string;
    instrumentCategoryIsActive?: boolean;
    instrumentCategoryRedemptionCutoffTime?: string;
    instrumentCategorySuitabilityLabel?: string;
    [prop: string]: any;
    constructor(data?: Partial<InstrumentsReporting>);
}
export interface InstrumentsReportingRelations {
}
export declare type InstrumentsReportingWithRelations = InstrumentsReporting & InstrumentsReportingRelations;
