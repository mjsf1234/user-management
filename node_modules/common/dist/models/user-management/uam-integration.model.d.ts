import { BaseSQLModel } from '..';
export declare class UamIntegration extends BaseSQLModel {
    userCode: string;
    userName: string;
    employeeCode: string;
    branchCode: string;
    branchName: string;
    departmentCode: string;
    departmentName: string;
    profile: string;
    status: string;
    lastLoginDate: string;
    activity: string;
    subStatus: string;
    subProfile: string;
    contactNumber: string;
    userType: number;
    category: number | null;
    reportingManagerCode: string;
    oldContactNumber: string;
    newContactNumber: string;
    oldUserType: number;
    newUserType: number;
    oldEmployeeName: string;
    newEmployeeName: string;
    oldProfileName: string;
    newProfileName: string;
    oldBranchName: string;
    newBranchName: string;
    oldDepartmentName: string;
    newDepartmentName: string;
    lastModifiedMakerId: string;
    lastModifiedCheckerId: string | null;
    lastModifiedMakerDateTime: Date;
    lastModifiedCheckerDateTime: Date | null;
    disableDateTime: Date;
    deletionDateTime: Date;
    dormantDateTime: Date;
    creationDateTime: Date;
    isLatest: boolean;
    email: string;
    oldEmail: string;
    newEmail: string;
    oldSalutation: number;
    newSalutation: number;
    salutation: number;
    dob?: Date | null;
    oldDob?: Date | null;
    newDob?: Date | null;
    oldCategory: number;
    newCategory: number | null;
    oldDepartmentCode: string;
    newDepartmentCode: string;
    oldBranchCode: string;
    newBranchCode: string;
    oldReportingManagerCode: string;
    newReportingManagerCode: string;
    oldGender: number;
    newGender: number;
    gender: number;
    maxAllowedLoginAttempts?: number;
    enabledFromDormancyRecently?: boolean | null;
    appUserId: number;
    [prop: string]: any;
    constructor(data?: Partial<UamIntegration>);
}
export interface UamIntegrationRelations {
}
export declare type UamIntegrationWithRelations = UamIntegration & UamIntegrationRelations;
